rm(list=ls())
library(ggplot2)
library(sva)
library(data.table)
library(limma)
data=data.frame(read.table("../aggregate_h9_unsorted_samples/h9.unsorted.atac.counts.txt",header=TRUE,sep='\t'))
rownames(data)=paste(data$chrom,data$start,data$end,sep="_")
data$chrom=NULL
data$start=NULL
data$end=NULL
data=voom(counts=data,normalize.method = "quantile")
getwd(( ))
getwd(
)
pwd
rm(list=ls())
library(ggplot2)
library(sva)
library(data.table)
library(limma)
data=data.frame(read.table("../../aggregate_h9_unsorted_samples/h9.unsorted.atac.counts.txt",header=TRUE,sep='\t'))
rownames(data)=paste(data$chrom,data$start,data$end,sep="_")
data$chrom=NULL
data$start=NULL
data$end=NULL
data=voom(counts=data,normalize.method = "quantile")
batches=data.frame(read.table("batches.txt",header=TRUE,sep='\t'))
batches
rm(list=ls())
library(ggplot2)
library(sva)
library(data.table)
library(limma)
data=data.frame(read.table("../../aggregate_h9_unsorted_samples/h9.unsorted.atac.counts.txt",header=TRUE,sep='\t'))
rownames(data)=paste(data$chrom,data$start,data$end,sep="_")
data$chrom=NULL
data$start=NULL
data$end=NULL
data=voom(counts=data,normalize.method = "quantile")
batches=data.frame(read.table("batches.txt",header=TRUE,sep='\t'))
filtered=data$E
data.pca=prcomp(t(filtered))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),width=1,xlim=c(0,13),ylim=c(0,100),xlab="PC",ylab="% Variance Explained")
text(1:12,100*data.pca$sdev^2/sum(data.pca$sdev^2),labels=round(100*data.pca$sdev^2/sum(data.pca$sdev^2),2))
pca_df=as.data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
pca_df
nrow(data)
p1=ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,color=pca_df$Condition))+
geom_point(show.legend=TRUE,size=5) +
xlab("PC1: 46.71%")+
ylab("PC2: 28.65%")+
scale_color_manual(name = "DMSO vs Control",values = c("#7570b3", "#d95f02"))
p1
mod2=model.matrix(~0+Condition,data=batches)
fit <- lmFit(filtered,mod2)
cont.matrix=makeContrasts(dmso_v_control="Conditiondmso - Conditioncontrol",
levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
comparisons
for(i in seq(1,length(comparisons)))
{
tab<-topTable(e, number=nrow(e),coef=i,p.value = 0.05)
if(nrow(tab)>0){
names(tab)[1]=comparisons[i]
write.table(tab,file=paste("diff_",comparisons[i],".tsv",sep=""),quote=FALSE,sep='\t',row.names = TRUE,col.names = TRUE)
png(paste("volcano_peaks",comparisons[i],".png",sep=""))
volcanoplot(e,coef=i,highlight =0,names=rownames(tab),main=comparisons[i])
dev.off()
}
else{
write.table(tab,file=paste("diff_",comparisons[i],".tsv",sep=""),quote=FALSE,sep='\t',row.names = FALSE,col.names = FALSE)
}
}
topTable(e)
library(ggplot2)
vals=topTable(e,number=nrow(e),coef=1)
vals$pscaled=-10*log10(vals$adj.P.Val)
vals$sig=vals$adj.P.Val<0.05
ggplot(data=vals,aes(y=vals$pscaled,x=vals$logFC,color=vals$sig))+
geom_point()+
xlab("log2(FC)")+
ylab("-10*log10(pval)")
rm(list=ls())
library(ggplot2)
library(sva)
library(data.table)
library(limma)
data=data.frame(read.table("../../aggregate_hues6_unsorted_samples/hues6.unsorted.atac.counts.txt",header=TRUE,sep='\t'))
rownames(data)=paste(data$chrom,data$start,data$end,sep="_")
data$chrom=NULL
data$start=NULL
data$end=NULL
data=voom(counts=data,normalize.method = "quantile")
batches=data.frame(read.table("batches.txt",header=TRUE,sep='\t'))
filtered=data$E
nrow(data)
data.pca=prcomp(t(filtered))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),width=1,xlim=c(0,13),ylim=c(0,100),xlab="PC",ylab="% Variance Explained")
text(1:12,100*data.pca$sdev^2/sum(data.pca$sdev^2),labels=round(100*data.pca$sdev^2/sum(data.pca$sdev^2),2))
pca_df=as.data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
p1=ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,color=pca_df$Condition))+
geom_point(show.legend=TRUE,size=5) +
xlab("PC1: 46.71%")+
ylab("PC2: 28.65%")+
scale_color_manual(name = "DMSO vs Control",values = c("#7570b3", "#d95f02"))
p1=ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,color=pca_df$Condition))+
geom_point(show.legend=TRUE,size=5) +
xlab("PC1: 74.43%")+
ylab("PC2: 13.99%")+
scale_color_manual(name = "DMSO vs Control",values = c("#7570b3", "#d95f02"))
p1
mod2=model.matrix(~0+Condition,data=batches)
fit <- lmFit(filtered,mod2)
cont.matrix=makeContrasts(dmso_v_control="Conditiondmso - Conditioncontrol",
levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
tab<-topTable(e, number=nrow(e),coef=i,p.value = 0.05)
if(nrow(tab)>0){
names(tab)[1]=comparisons[i]
write.table(tab,file=paste("diff_",comparisons[i],".tsv",sep=""),quote=FALSE,sep='\t',row.names = TRUE,col.names = TRUE)
png(paste("volcano_peaks",comparisons[i],".png",sep=""))
volcanoplot(e,coef=i,highlight =0,names=rownames(tab),main=comparisons[i])
dev.off()
}
else{
write.table(tab,file=paste("diff_",comparisons[i],".tsv",sep=""),quote=FALSE,sep='\t',row.names = FALSE,col.names = FALSE)
}
}
library(ggplot2)
vals=topTable(e,number=nrow(e),coef=1)
vals$pscaled=-10*log10(vals$adj.P.Val)
vals$sig=vals$adj.P.Val<0.05
ggplot(data=vals,aes(y=vals$pscaled,x=vals$logFC,color=vals$sig))+
geom_point()+
xlab("log2(FC)")+
ylab("-10*log10(pval)")
tab<-topTable(e, number=nrow(e),coef=i,p.value = 0.05)
nrow(tab)
tab<-topTable(e, number=nrow(e),coef=i,p.value = 0.01)
nrow(tab)
getwd()
setwd("../hues6/")
source('~/nandi/diff_peaks/hues6/limma_no_sva_hues6.R', echo=TRUE)
setwd("../h9/")
source('~/nandi/diff_peaks/h9/limma_no_sva_h9.R', echo=TRUE)
getwd()
setwd("~/nandi/")
setwd("~/nandi/diff_peaks/hues6/")
source('~/nandi/diff_peaks/hues6/limma_no_sva_hues6.R', echo=TRUE)
setwd("~/nandi/adar_editing/xgboost_with_shap/performance_barplots/")
source('~/nandi/adar_editing/xgboost_with_shap/performance_barplots/Combined_Comp_Performance.R', echo=TRUE)
m
data
data$X.1=NULL
source('~/nandi/adar_editing/xgboost_with_shap/performance_barplots/Combined_Comp_Performance.R', echo=TRUE)
m
source('~/nandi/adar_editing/xgboost_with_shap/performance_barplots/Combined_Comp_Performance.R', echo=TRUE)
source('~/nandi/adar_editing/xgboost_with_shap/performance_barplots/Combined_Comp_Performance.R', echo=TRUE)
source('~/nandi/adar_editing/xgboost_with_shap/performance_barplots/Combined_Comp_Performance.R', echo=TRUE)
source('~/nandi/adar_editing/xgboost_with_shap/performance_barplots/Combined_Comp_Performance.R', echo=TRUE)
data
source('~/nandi/adar_editing/xgboost_with_shap/performance_barplots/Combined_Comp_Performance.R', echo=TRUE)
source('~/nandi/adar_editing/xgboost_with_shap/performance_barplots/Combined_Comp_Performance.R', echo=TRUE)
source('~/nandi/adar_editing/xgboost_with_shap/performance_barplots/Combined_Comp_Performance.R', echo=TRUE)
source('~/nandi/adar_editing/xgboost_with_shap/performance_barplots/Combined_Comp_Performance.R', echo=TRUE)
